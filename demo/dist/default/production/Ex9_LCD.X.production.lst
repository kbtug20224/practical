

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Mon May 15 15:58:20 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           	psect	idataCOMRAM
    18  007EC6                     __pidataCOMRAM:
    19                           	opt stack 0
    20                           
    21                           ;initializer for _String1
    22  007EC6  080D               	dw	STR_1& (0+65535)
    23                           
    24                           ;initializer for _String2
    25  007EC8  0805               	dw	STR_2& (0+65535)
    26  0000                     _ADCON1	set	4033
    27  0000                     _LATAbits	set	3977
    28  0000                     _LATB	set	3978
    29  0000                     _TRISAbits	set	3986
    30  0000                     _TRISB	set	3987
    31                           
    32                           	psect	smallconst
    33  000804                     __psmallconst:
    34                           	opt stack 0
    35  000804  00                 	db	0
    36  000805                     __stringdata:
    37                           	opt stack 0
    38  000805                     STR_2:
    39  000805  43                 	db	67	;'C'
    40  000806  6F                 	db	111	;'o'
    41  000807  6C                 	db	108	;'l'
    42  000808  6C                 	db	108	;'l'
    43  000809  65                 	db	101	;'e'
    44  00080A  67                 	db	103	;'g'
    45  00080B  65                 	db	101	;'e'
    46  00080C  00                 	db	0
    47  00080D                     STR_1:
    48  00080D  4B                 	db	75	;'K'
    49  00080E  42                 	db	66	;'B'
    50  00080F  54                 	db	84	;'T'
    51  000810  00                 	db	0
    52  000811                     __end_of__stringdata:
    53                           	opt stack 0
    54  000811  00                 	db	0	; dummy byte at the end
    55  0000                     
    56                           ; #config settings
    57                           
    58                           	psect	cinit
    59  007F1A                     __pcinit:
    60                           	opt stack 0
    61  007F1A                     start_initialization:
    62                           	opt stack 0
    63  007F1A                     __initialization:
    64                           	opt stack 0
    65                           
    66                           ; Initialize objects allocated to COMRAM (4 bytes)
    67                           ; load TBLPTR registers with __pidataCOMRAM
    68  007F1A  0EC6               	movlw	low __pidataCOMRAM
    69  007F1C  6EF6               	movwf	tblptrl,c
    70  007F1E  0E7E               	movlw	high __pidataCOMRAM
    71  007F20  6EF7               	movwf	tblptrh,c
    72  007F22  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    73  007F24  6EF8               	movwf	tblptru,c
    74  007F26  EE00  F008         	lfsr	0,__pdataCOMRAM
    75  007F2A  EE10 F004          	lfsr	1,4
    76  007F2E                     copy_data0:
    77  007F2E  0009               	tblrd		*+
    78  007F30  CFF5 FFEE          	movff	tablat,postinc0
    79  007F34  50E5               	movf	postdec1,w,c
    80  007F36  50E1               	movf	fsr1l,w,c
    81  007F38  E1FA               	bnz	copy_data0
    82  007F3A                     end_of_initialization:
    83                           	opt stack 0
    84  007F3A                     __end_of__initialization:
    85                           	opt stack 0
    86  007F3A  0E00               	movlw	low (__Lsmallconst shr (0+16))
    87  007F3C  6EF8               	movwf	tblptru,c
    88  007F3E  0E08               	movlw	high __Lsmallconst
    89  007F40  6EF7               	movwf	tblptrh,c
    90  007F42  0100               	movlb	0
    91  007F44  EFBF  F03F         	goto	_main	;jump to C main() function
    92                           tblptru	equ	0xFF8
    93                           tblptrh	equ	0xFF7
    94                           tblptrl	equ	0xFF6
    95                           tablat	equ	0xFF5
    96                           postinc0	equ	0xFEE
    97                           postdec1	equ	0xFE5
    98                           fsr1l	equ	0xFE1
    99                           
   100                           	psect	dataCOMRAM
   101  000008                     __pdataCOMRAM:
   102                           	opt stack 0
   103  000008                     _String1:
   104                           	opt stack 0
   105  000008                     	ds	2
   106  00000A                     _String2:
   107                           	opt stack 0
   108  00000A                     	ds	2
   109                           tblptru	equ	0xFF8
   110                           tblptrh	equ	0xFF7
   111                           tblptrl	equ	0xFF6
   112                           tablat	equ	0xFF5
   113                           postinc0	equ	0xFEE
   114                           postdec1	equ	0xFE5
   115                           fsr1l	equ	0xFE1
   116                           
   117                           	psect	cstackCOMRAM
   118  000001                     __pcstackCOMRAM:
   119                           	opt stack 0
   120  000001                     lcd_delay@time:
   121                           	opt stack 0
   122                           
   123                           ; 2 bytes @ 0x0
   124  000001                     	ds	2
   125  000003                     lcd_delay@i:
   126                           	opt stack 0
   127                           
   128                           ; 2 bytes @ 0x2
   129  000003                     	ds	2
   130  000005                     lcd_delay@j:
   131                           	opt stack 0
   132                           
   133                           ; 2 bytes @ 0x4
   134  000005                     	ds	2
   135  000007                     SendInstruction@command:
   136                           	opt stack 0
   137  000007                     SendData@lcddata:
   138                           	opt stack 0
   139                           
   140                           ; 1 bytes @ 0x6
   141  000007                     	ds	1
   142  000008                     tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           postinc0	equ	0xFEE
   147                           postdec1	equ	0xFE5
   148                           fsr1l	equ	0xFE1
   149                           
   150                           ; 0 bytes @ 0x7
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 58 in file "lcd.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;		None               void
   163 ;; Registers used:
   164 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   170 ;;      Params:         0       0       0       0       0       0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0       0       0
   172 ;;      Temps:          0       0       0       0       0       0       0       0       0
   173 ;;      Totals:         0       0       0       0       0       0       0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels required when called:    2
   176 ;; This function calls:
   177 ;;		_SendData
   178 ;;		_SendInstruction
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185  007F7E                     __ptext0:
   186                           	opt stack 0
   187  007F7E                     _main:
   188                           	opt stack 29
   189                           
   190                           ;lcd.c: 60: ADCON1 = 0x0F;
   191                           
   192                           ;incstack = 0
   193  007F7E  0E0F               	movlw	15
   194  007F80  6EC1               	movwf	4033,c	;volatile
   195                           
   196                           ;lcd.c: 61: TRISB = 0x00;
   197  007F82  0E00               	movlw	0
   198  007F84  6E93               	movwf	3987,c	;volatile
   199                           
   200                           ;lcd.c: 62: TRISAbits.RA0 = 0;
   201  007F86  9092               	bcf	3986,0,c	;volatile
   202                           
   203                           ;lcd.c: 63: TRISAbits.RA1 = 0;
   204  007F88  9292               	bcf	3986,1,c	;volatile
   205                           
   206                           ;lcd.c: 65: SendInstruction(0x38);
   207  007F8A  0E38               	movlw	56
   208  007F8C  EC79  F03F         	call	_SendInstruction
   209                           
   210                           ;lcd.c: 66: SendInstruction(0x06);
   211  007F90  0E06               	movlw	6
   212  007F92  EC79  F03F         	call	_SendInstruction
   213                           
   214                           ;lcd.c: 67: SendInstruction(0x0C);
   215  007F96  0E0C               	movlw	12
   216  007F98  EC79  F03F         	call	_SendInstruction
   217                           
   218                           ;lcd.c: 68: SendInstruction(0x01);
   219  007F9C  0E01               	movlw	1
   220  007F9E  EC79  F03F         	call	_SendInstruction
   221                           
   222                           ;lcd.c: 69: SendInstruction(0x80);
   223  007FA2  0E80               	movlw	128
   224  007FA4  EC79  F03F         	call	_SendInstruction
   225                           
   226                           ;lcd.c: 71: while(*String1)
   227  007FA8  D00A               	goto	l703
   228  007FAA                     l699:
   229                           
   230                           ;lcd.c: 72: {
   231                           ;lcd.c: 73: SendData(*String1);
   232  007FAA  C008  FFF6         	movff	_String1,tblptrl
   233  007FAE  C009  FFF7         	movff	_String1+1,tblptrh
   234  007FB2  0008               	tblrd		*
   235  007FB4  50F5               	movf	tablat,w,c
   236  007FB6  EC65  F03F         	call	_SendData
   237                           
   238                           ;lcd.c: 74: String1++;
   239  007FBA  4A08               	infsnz	_String1,f,c
   240  007FBC  2A09               	incf	_String1+1,f,c
   241  007FBE                     l703:
   242  007FBE  C008  FFF6         	movff	_String1,tblptrl
   243  007FC2  C009  FFF7         	movff	_String1+1,tblptrh
   244  007FC6  0008               	tblrd		*
   245  007FC8  50F5               	movf	tablat,w,c
   246  007FCA  0900               	iorlw	0
   247  007FCC  A4D8               	btfss	status,2,c
   248  007FCE  D7ED               	goto	l699
   249                           
   250                           ;lcd.c: 75: }
   251                           ;lcd.c: 77: SendInstruction(0xC0);
   252  007FD0  0EC0               	movlw	192
   253  007FD2  EC79  F03F         	call	_SendInstruction
   254                           
   255                           ;lcd.c: 78: while(*String2)
   256  007FD6  D00A               	goto	l711
   257  007FD8                     l707:
   258                           
   259                           ;lcd.c: 79: {
   260                           ;lcd.c: 80: SendData(*String2);
   261  007FD8  C00A  FFF6         	movff	_String2,tblptrl
   262  007FDC  C00B  FFF7         	movff	_String2+1,tblptrh
   263  007FE0  0008               	tblrd		*
   264  007FE2  50F5               	movf	tablat,w,c
   265  007FE4  EC65  F03F         	call	_SendData
   266                           
   267                           ;lcd.c: 81: String2++;
   268  007FE8  4A0A               	infsnz	_String2,f,c
   269  007FEA  2A0B               	incf	_String2+1,f,c
   270  007FEC                     l711:
   271  007FEC  C00A  FFF6         	movff	_String2,tblptrl
   272  007FF0  C00B  FFF7         	movff	_String2+1,tblptrh
   273  007FF4  0008               	tblrd		*
   274  007FF6  50F5               	movf	tablat,w,c
   275  007FF8  0900               	iorlw	0
   276  007FFA  A4D8               	btfss	status,2,c
   277  007FFC  D7ED               	goto	l707
   278  007FFE                     l40:
   279  007FFE  D7FF               	goto	l40
   280  008000                     __end_of_main:
   281                           	opt stack 0
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           postinc0	equ	0xFEE
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           status	equ	0xFD8
   290                           
   291 ;; *************** function _SendInstruction *****************
   292 ;; Defined at:
   293 ;;		line 19 in file "lcd.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;  command         1    wreg     unsigned char 
   296 ;; Auto vars:     Size  Location     Type
   297 ;;  command         1    6[COMRAM] unsigned char 
   298 ;; Return value:  Size  Location     Type
   299 ;;		None               void
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   307 ;;      Params:         0       0       0       0       0       0       0       0       0
   308 ;;      Locals:         1       0       0       0       0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0       0       0       0       0
   310 ;;      Totals:         1       0       0       0       0       0       0       0       0
   311 ;;Total ram usage:        1 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		_lcd_delay
   316 ;; This function is called by:
   317 ;;		_main
   318 ;;		_InitLCD
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text1
   323  007EF2                     __ptext1:
   324                           	opt stack 0
   325  007EF2                     _SendInstruction:
   326                           	opt stack 29
   327                           
   328                           ;incstack = 0
   329                           ;SendInstruction@command stored from wreg
   330  007EF2  CFE8 F007          	movff	wreg,SendInstruction@command
   331                           
   332                           ;lcd.c: 21: LATAbits.LA0 = 0;
   333  007EF6  9089               	bcf	3977,0,c	;volatile
   334                           
   335                           ;lcd.c: 22: LATB = command;
   336  007EF8  C007  FF8A         	movff	SendInstruction@command,3978	;volatile
   337                           
   338                           ;lcd.c: 23: LATAbits.LA1 = 1;
   339  007EFC  8289               	bsf	3977,1,c	;volatile
   340                           
   341                           ;lcd.c: 24: lcd_delay(10);
   342  007EFE  0E00               	movlw	0
   343  007F00  6E02               	movwf	lcd_delay@time+1,c
   344  007F02  0E0A               	movlw	10
   345  007F04  6E01               	movwf	lcd_delay@time,c
   346  007F06  ECA4  F03F         	call	_lcd_delay	;wreg free
   347                           
   348                           ;lcd.c: 25: LATAbits.LA1 = 0;
   349  007F0A  9289               	bcf	3977,1,c	;volatile
   350                           
   351                           ;lcd.c: 26: lcd_delay(10);
   352  007F0C  0E00               	movlw	0
   353  007F0E  6E02               	movwf	lcd_delay@time+1,c
   354  007F10  0E0A               	movlw	10
   355  007F12  6E01               	movwf	lcd_delay@time,c
   356  007F14  ECA4  F03F         	call	_lcd_delay	;wreg free
   357  007F18  0012               	return	
   358  007F1A                     __end_of_SendInstruction:
   359                           	opt stack 0
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec1	equ	0xFE5
   367                           fsr1l	equ	0xFE1
   368                           status	equ	0xFD8
   369                           
   370 ;; *************** function _SendData *****************
   371 ;; Defined at:
   372 ;;		line 29 in file "lcd.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  lcddata         1    wreg     unsigned char 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;  lcddata         1    6[COMRAM] unsigned char 
   377 ;; Return value:  Size  Location     Type
   378 ;;		None               void
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0, cstack
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         0       0       0       0       0       0       0       0       0
   387 ;;      Locals:         1       0       0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0
   389 ;;      Totals:         1       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        1 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    1
   393 ;; This function calls:
   394 ;;		_lcd_delay
   395 ;; This function is called by:
   396 ;;		_main
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text2
   401  007ECA                     __ptext2:
   402                           	opt stack 0
   403  007ECA                     _SendData:
   404                           	opt stack 29
   405                           
   406                           ;incstack = 0
   407                           ;SendData@lcddata stored from wreg
   408  007ECA  CFE8 F007          	movff	wreg,SendData@lcddata
   409                           
   410                           ;lcd.c: 31: LATAbits.LA0 = 1;
   411  007ECE  8089               	bsf	3977,0,c	;volatile
   412                           
   413                           ;lcd.c: 32: LATB = lcddata;
   414  007ED0  C007  FF8A         	movff	SendData@lcddata,3978	;volatile
   415                           
   416                           ;lcd.c: 33: LATAbits.LA1 = 1;
   417  007ED4  8289               	bsf	3977,1,c	;volatile
   418                           
   419                           ;lcd.c: 34: lcd_delay(10);
   420  007ED6  0E00               	movlw	0
   421  007ED8  6E02               	movwf	lcd_delay@time+1,c
   422  007EDA  0E0A               	movlw	10
   423  007EDC  6E01               	movwf	lcd_delay@time,c
   424  007EDE  ECA4  F03F         	call	_lcd_delay	;wreg free
   425                           
   426                           ;lcd.c: 35: LATAbits.LA1 = 0;
   427  007EE2  9289               	bcf	3977,1,c	;volatile
   428                           
   429                           ;lcd.c: 36: lcd_delay(10);
   430  007EE4  0E00               	movlw	0
   431  007EE6  6E02               	movwf	lcd_delay@time+1,c
   432  007EE8  0E0A               	movlw	10
   433  007EEA  6E01               	movwf	lcd_delay@time,c
   434  007EEC  ECA4  F03F         	call	_lcd_delay	;wreg free
   435  007EF0  0012               	return	
   436  007EF2                     __end_of_SendData:
   437                           	opt stack 0
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           postdec1	equ	0xFE5
   445                           fsr1l	equ	0xFE1
   446                           status	equ	0xFD8
   447                           
   448 ;; *************** function _lcd_delay *****************
   449 ;; Defined at:
   450 ;;		line 8 in file "lcd.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  time            2    0[COMRAM] unsigned int 
   453 ;; Auto vars:     Size  Location     Type
   454 ;;  j               2    4[COMRAM] unsigned int 
   455 ;;  i               2    2[COMRAM] unsigned int 
   456 ;; Return value:  Size  Location     Type
   457 ;;		None               void
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         2       0       0       0       0       0       0       0       0
   466 ;;      Locals:         4       0       0       0       0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0
   468 ;;      Totals:         6       0       0       0       0       0       0       0       0
   469 ;;Total ram usage:        6 bytes
   470 ;; Hardware stack levels used:    1
   471 ;; This function calls:
   472 ;;		Nothing
   473 ;; This function is called by:
   474 ;;		_SendInstruction
   475 ;;		_SendData
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479                           	psect	text3
   480  007F48                     __ptext3:
   481                           	opt stack 0
   482  007F48                     _lcd_delay:
   483                           	opt stack 29
   484                           
   485                           ;lcd.c: 10: unsigned int i , j ;
   486                           ;lcd.c: 12: for(i = 0; i < time; i++)
   487                           
   488                           ;incstack = 0
   489  007F48  0E00               	movlw	0
   490  007F4A  6E04               	movwf	lcd_delay@i+1,c
   491  007F4C  0E00               	movlw	0
   492  007F4E  6E03               	movwf	lcd_delay@i,c
   493  007F50  D00F               	goto	l641
   494  007F52                     l629:
   495                           
   496                           ;lcd.c: 13: {
   497                           ;lcd.c: 14: for(j=0;j<100;j++);
   498  007F52  0E00               	movlw	0
   499  007F54  6E06               	movwf	lcd_delay@j+1,c
   500  007F56  0E00               	movlw	0
   501  007F58  6E05               	movwf	lcd_delay@j,c
   502  007F5A  0E64               	movlw	100
   503  007F5C  5C05               	subwf	lcd_delay@j,w,c
   504  007F5E  0E00               	movlw	0
   505  007F60  5806               	subwfb	lcd_delay@j+1,w,c
   506  007F62  B0D8               	btfsc	status,0,c
   507  007F64  D003               	goto	l639
   508  007F66  4A05               	infsnz	lcd_delay@j,f,c
   509  007F68  2A06               	incf	lcd_delay@j+1,f,c
   510  007F6A  D7F7               	goto	L1
   511  007F6C                     l639:
   512  007F6C  4A03               	infsnz	lcd_delay@i,f,c
   513  007F6E  2A04               	incf	lcd_delay@i+1,f,c
   514  007F70                     l641:
   515  007F70  5001               	movf	lcd_delay@time,w,c
   516  007F72  5C03               	subwf	lcd_delay@i,w,c
   517  007F74  5002               	movf	lcd_delay@time+1,w,c
   518  007F76  5804               	subwfb	lcd_delay@i+1,w,c
   519  007F78  B0D8               	btfsc	status,0,c
   520  007F7A  0012               	return	
   521  007F7C  D7EA               	goto	l629
   522  007F7E                     __end_of_lcd_delay:
   523                           	opt stack 0
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           postdec1	equ	0xFE5
   531                           fsr1l	equ	0xFE1
   532                           status	equ	0xFD8
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           status	equ	0xFD8
   542                           
   543                           	psect	rparam
   544  0000                     tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1l	equ	0xFE1
   552                           status	equ	0xFD8


Data Sizes:
    Strings     12
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    String2	PTR unsigned char  size(2) Largest target is 8
		 -> STR_2(CODE[8]), 

    String1	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->_SendData
    _main->_SendInstruction
    _SendInstruction->_lcd_delay
    _SendData->_lcd_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     494
                           _SendData
                    _SendInstruction
 ---------------------------------------------------------------------------------
 (1) _SendInstruction                                      1     1      0     247
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (1) _SendData                                             1     1      0     247
                                              6 COMRAM     1     1      0
                          _lcd_delay
 ---------------------------------------------------------------------------------
 (2) _lcd_delay                                            6     4      2     232
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SendData
     _lcd_delay
   _SendInstruction
     _lcd_delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       B       1       11.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      20        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Mon May 15 15:58:20 2023

                      l40 7FFE                       l711 7FEC                       l703 7FBE  
                     l641 7F70                       l707 7FD8                       l629 7F52  
                     l639 7F6C                       l699 7FAA                       wreg 000FE8  
           lcd_delay@time 0001                      STR_1 080D                      STR_2 0805  
                    _LATB 000F8A                      _main 7F7E                      fsr1l 000FE1  
                    start 0800                     ?_main 0001                     _TRISB 000F93  
                   tablat 000FF5                     status 000FD8           __initialization 7F1A  
            __end_of_main 8000          __end_of_SendData 7EF2                    ??_main 0008  
           __activetblptr 000001                    _ADCON1 000FC1  __size_of_SendInstruction 0028  
            __pdataCOMRAM 0008              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 7F3A            __pcstackCOMRAM 0001        __size_of_lcd_delay 0036  
               ?_SendData 0001         ??_SendInstruction 0007                ??_SendData 0007  
                 __Hparam 0000                   __Lparam 0000         __end_of_lcd_delay 7F7E  
                 _String1 0008                   _String2 000A              __psmallconst 0804  
                 __pcinit 7F1A                   __ramtop 0800                   __ptext0 7F7E  
                 __ptext1 7EF2                   __ptext2 7ECA                   __ptext3 7F48  
    end_of_initialization 7F3A                   postdec1 000FE5                   postinc0 000FEE  
               _TRISAbits 000F92                lcd_delay@i 0003                lcd_delay@j 0005  
           __pidataCOMRAM 7EC6       start_initialization 7F1A           _SendInstruction 7EF2  
       __size_of_SendData 0028       __end_of__stringdata 0811           SendData@lcddata 0007  
  SendInstruction@command 0007                 _lcd_delay 7F48               __smallconst 0804  
 __end_of_SendInstruction 7F1A                  _LATAbits 000F89                ?_lcd_delay 0001  
             __stringdata 0805                 copy_data0 7F2E                  _SendData 7ECA  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0804  
        ?_SendInstruction 0001             __size_of_main 0082               ??_lcd_delay 0003  
